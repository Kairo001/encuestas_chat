# Generated by Django 3.2.11 on 2022-02-14 15:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en la cual el objeto fue creado.', verbose_name='create at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última modificación del objeto.', verbose_name='modified at')),
                ('tipoId', models.CharField(blank=True, choices=[('V', 'Cerificado de nacido vivo'), ('R', 'Registro civil'), ('T', 'Tarjeta de identidad'), ('C', 'Cédula de ciudadanía'), ('E', 'Cédula de extranjería'), ('P', 'Pasaporte'), ('A', 'Adulto sin identificar'), ('M', 'Menor sin identificar')], max_length=1, null=True, verbose_name='Tipo de indentificación')),
                ('numeroId', models.CharField(error_messages={'unique': 'Ya existe un usuario con este número de documento.'}, max_length=13, unique=True, verbose_name='Número de identificación')),
                ('nombre1', models.CharField(max_length=40, verbose_name='Primer nombre')),
                ('nombre2', models.CharField(blank=True, max_length=40, verbose_name='Segundo nombre')),
                ('apellido1', models.CharField(max_length=40, verbose_name='Primer apellido')),
                ('apellido2', models.CharField(blank=True, max_length=40, verbose_name='Segundo apellido')),
                ('fechaNac', models.DateField(blank=True, null=True, verbose_name='Fecha de nacimiento')),
                ('genero', models.CharField(blank=True, choices=[('F', 'Femenino'), ('M', 'Masculino')], max_length=1, verbose_name='Género')),
                ('correo', models.EmailField(error_messages={'unique': 'Ya existe un usuario con este correo electrónico.'}, max_length=254, unique=True, verbose_name='Dirección de correo electrónico')),
                ('direccion', models.CharField(blank=True, max_length=220, verbose_name='Dirección de residencia')),
                ('telefono', models.CharField(blank=True, max_length=13, validators=[django.core.validators.RegexValidator(message='Número no válido.', regex='\\+?1?\\d{10,12}$')])),
                ('celular', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator(message='Número no válido.', regex='\\+?1?\\d{10,12}$')])),
                ('email_verified', models.BooleanField(default=False, help_text='Establece en verdadero cuando el usuario ha verificado su dirección de email.', verbose_name='Veridicado')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa si el usuario puede iniciar sesión en el sitio de administración.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designa si este usuario debe ser tratado como activo. Desmarcar esto en lugar de eliminar cuentas.', verbose_name='active')),
                ('is_manager', models.BooleanField(default=False, help_text='Designa si el usuario es un gerente o no.', verbose_name='manager status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en la cual el objeto fue creado.', verbose_name='create at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última modificación del objeto.', verbose_name='modified at')),
                ('metadata', models.TextField()),
                ('nombre1', models.BooleanField(default=False)),
                ('nombre2', models.BooleanField(default=False)),
                ('apellido1', models.BooleanField(default=False)),
                ('apellido2', models.BooleanField(default=False)),
                ('fechaNac', models.BooleanField(default=False)),
                ('genero', models.BooleanField(default=False)),
                ('correo', models.BooleanField(default=False)),
                ('direccion', models.BooleanField(default=False)),
                ('telefono', models.BooleanField(default=False)),
                ('celular', models.BooleanField(default=False)),
                ('entidad', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
    ]
